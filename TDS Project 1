{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyMYsBpLaYacYJXnUw4KmzVz",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Shreya5619/TDS-Project1/blob/main/TDS%20Project%201\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 46,
      "metadata": {
        "id": "ncbLl1V0Xw1P"
      },
      "outputs": [],
      "source": [
        "import requests\n",
        "from google.colab import userdata\n",
        "API=userdata.get('API')"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import os\n",
        "from dotenv import load_dotenv\n",
        "\n",
        "load_dotenv()\n",
        "GITHUB_TOKEN = os.getenv(API)\n",
        "headers = {\n",
        "    \"Authorization\": f\"Bearer {API}\",\n",
        "    \"X-GitHub-Api-Version\": \"2022-11-28\"\n",
        "}\n"
      ],
      "metadata": {
        "id": "VezEhy3CN1n6"
      },
      "execution_count": 47,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "response = requests.get(\"https://api.github.com/user\", headers=headers)"
      ],
      "metadata": {
        "id": "Fhg4H1jUSqrH"
      },
      "execution_count": 48,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "users = []\n",
        "url = \"https://api.github.com/search/users?q=location:Austin followers:>100\"\n",
        "response = requests.get(url, headers=headers)\n",
        "data = response.json()\n",
        "for item in data['items']:\n",
        "    user_url = item['url']\n",
        "    user_data = requests.get(user_url, headers=headers).json()\n",
        "    users.append(user_data)\n",
        "users[:2]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "64tAUoVYOJ1H",
        "outputId": "9fdf1c70-dcc6-4433-bdeb-cdfc40a1d897"
      },
      "execution_count": 53,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[{'login': 'getify',\n",
              "  'id': 150330,\n",
              "  'node_id': 'MDQ6VXNlcjE1MDMzMA==',\n",
              "  'avatar_url': 'https://avatars.githubusercontent.com/u/150330?v=4',\n",
              "  'gravatar_id': '',\n",
              "  'url': 'https://api.github.com/users/getify',\n",
              "  'html_url': 'https://github.com/getify',\n",
              "  'followers_url': 'https://api.github.com/users/getify/followers',\n",
              "  'following_url': 'https://api.github.com/users/getify/following{/other_user}',\n",
              "  'gists_url': 'https://api.github.com/users/getify/gists{/gist_id}',\n",
              "  'starred_url': 'https://api.github.com/users/getify/starred{/owner}{/repo}',\n",
              "  'subscriptions_url': 'https://api.github.com/users/getify/subscriptions',\n",
              "  'organizations_url': 'https://api.github.com/users/getify/orgs',\n",
              "  'repos_url': 'https://api.github.com/users/getify/repos',\n",
              "  'events_url': 'https://api.github.com/users/getify/events{/privacy}',\n",
              "  'received_events_url': 'https://api.github.com/users/getify/received_events',\n",
              "  'type': 'User',\n",
              "  'user_view_type': 'public',\n",
              "  'site_admin': False,\n",
              "  'name': 'Kyle Simpson',\n",
              "  'company': 'Getify Solutions',\n",
              "  'blog': 'http://getify.me',\n",
              "  'location': 'Austin, TX',\n",
              "  'email': 'getify@gmail.com',\n",
              "  'hireable': True,\n",
              "  'bio': \"Kyle Simpson is a Human-Centric Technologist. He's fighting for the people behind the pixels.\",\n",
              "  'twitter_username': None,\n",
              "  'public_repos': 69,\n",
              "  'public_gists': 406,\n",
              "  'followers': 43932,\n",
              "  'following': 2,\n",
              "  'created_at': '2009-11-08T06:56:21Z',\n",
              "  'updated_at': '2024-10-18T05:10:00Z'},\n",
              " {'login': 'benawad',\n",
              "  'id': 7872329,\n",
              "  'node_id': 'MDQ6VXNlcjc4NzIzMjk=',\n",
              "  'avatar_url': 'https://avatars.githubusercontent.com/u/7872329?v=4',\n",
              "  'gravatar_id': '',\n",
              "  'url': 'https://api.github.com/users/benawad',\n",
              "  'html_url': 'https://github.com/benawad',\n",
              "  'followers_url': 'https://api.github.com/users/benawad/followers',\n",
              "  'following_url': 'https://api.github.com/users/benawad/following{/other_user}',\n",
              "  'gists_url': 'https://api.github.com/users/benawad/gists{/gist_id}',\n",
              "  'starred_url': 'https://api.github.com/users/benawad/starred{/owner}{/repo}',\n",
              "  'subscriptions_url': 'https://api.github.com/users/benawad/subscriptions',\n",
              "  'organizations_url': 'https://api.github.com/users/benawad/orgs',\n",
              "  'repos_url': 'https://api.github.com/users/benawad/repos',\n",
              "  'events_url': 'https://api.github.com/users/benawad/events{/privacy}',\n",
              "  'received_events_url': 'https://api.github.com/users/benawad/received_events',\n",
              "  'type': 'User',\n",
              "  'user_view_type': 'public',\n",
              "  'site_admin': False,\n",
              "  'name': 'Ben Awad',\n",
              "  'company': 'Voidpet',\n",
              "  'blog': 'https://www.youtube.com/benawad97',\n",
              "  'location': 'Austin, TX',\n",
              "  'email': None,\n",
              "  'hireable': None,\n",
              "  'bio': 'React.js, Typescript, Node.js, PostgreSQL',\n",
              "  'twitter_username': 'benawad',\n",
              "  'public_repos': 254,\n",
              "  'public_gists': 136,\n",
              "  'followers': 29015,\n",
              "  'following': 4,\n",
              "  'created_at': '2014-06-12T15:55:20Z',\n",
              "  'updated_at': '2024-09-06T12:43:55Z'}]"
            ]
          },
          "metadata": {},
          "execution_count": 53
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "def clean_company_name(name):\n",
        "    if name:\n",
        "        return name.strip().lstrip(\"@\").upper()\n",
        "    return \"\"\n",
        "\n",
        "def format_user_data(users):\n",
        "    formatted_users = []\n",
        "    for user in users:\n",
        "        formatted_users.append({\n",
        "            \"login\": user.get(\"login\", \"\"),\n",
        "            \"name\": user.get(\"name\", \"\"),\n",
        "            \"company\": clean_company_name(user.get(\"company\", \"\")),\n",
        "            \"location\": user.get(\"location\", \"\"),\n",
        "            \"email\": user.get(\"email\", \"\"),\n",
        "            \"hireable\": user.get(\"hireable\", \"\"),\n",
        "            \"bio\": user.get(\"bio\", \"\"),\n",
        "            \"public_repos\": user.get(\"public_repos\", 0),\n",
        "            \"followers\": user.get(\"followers\", 0),\n",
        "            \"following\": user.get(\"following\", 0),\n",
        "            \"created_at\": user.get(\"created_at\", \"\")\n",
        "        })\n",
        "    return formatted_users\n",
        "formatted_users = format_user_data(users)\n",
        "#to view the user details\n",
        "formatted_users[:2]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "aJ4d-FZCOqat",
        "outputId": "7fdfd28b-03f5-483f-cdba-5ea1f211cc68"
      },
      "execution_count": 52,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[{'login': 'getify',\n",
              "  'name': 'Kyle Simpson',\n",
              "  'company': 'GETIFY SOLUTIONS',\n",
              "  'location': 'Austin, TX',\n",
              "  'email': 'getify@gmail.com',\n",
              "  'hireable': True,\n",
              "  'bio': \"Kyle Simpson is a Human-Centric Technologist. He's fighting for the people behind the pixels.\",\n",
              "  'public_repos': 69,\n",
              "  'followers': 43932,\n",
              "  'following': 2,\n",
              "  'created_at': '2009-11-08T06:56:21Z'},\n",
              " {'login': 'benawad',\n",
              "  'name': 'Ben Awad',\n",
              "  'company': 'VOIDPET',\n",
              "  'location': 'Austin, TX',\n",
              "  'email': None,\n",
              "  'hireable': None,\n",
              "  'bio': 'React.js, Typescript, Node.js, PostgreSQL',\n",
              "  'public_repos': 254,\n",
              "  'followers': 29015,\n",
              "  'following': 4,\n",
              "  'created_at': '2014-06-12T15:55:20Z'}]"
            ]
          },
          "metadata": {},
          "execution_count": 52
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Extract the `login` values\n",
        "logins = [item['login'] for item in formatted_users]\n",
        "print(logins)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "L30Kf0jMhoF8",
        "outputId": "1d2986ac-f059-44b2-f08c-3b55246123a1"
      },
      "execution_count": 50,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "['getify', 'benawad', 'steveklabnik', 'cloudflare', 'jbogard', 'EvanBacon', 'progrium', 'oracle', 'GeostatsGuy', 'benlesh', 'ContinuumIO', 'davatron5000', 'schneems', 'wardviaene', 'mikermcneil', 'SlexAxton', 'kentonv', 'pfrazee', 'dhg', 'aweary', 'hdm', 'mrocklin', 'JessicaSachs', 'codinghemp', 'srowen', 'ruotianluo', 'aaronabramov', 'pry0cc', 'teoliphant', 'PaulRashidi']\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "def get_user_repositories(logins):\n",
        "    repo_data = []\n",
        "    for login in logins:\n",
        "      repos_url = f\"https://api.github.com/users/{login}/repos?per_page=500\"\n",
        "      repos_response = requests.get(repos_url, headers=headers)\n",
        "      repos = repos_response.json()\n",
        "      for repo in repos:\n",
        "          license_name = repo[\"license\"][\"key\"] if repo[\"license\"] else \"\"\n",
        "          repo_data.append({\n",
        "              \"login\": login,\n",
        "              \"full_name\": repo.get(\"full_name\", \"\"),\n",
        "              \"created_at\": repo.get(\"created_at\", \"\"),\n",
        "              \"stargazers_count\": repo.get(\"stargazers_count\", 0),\n",
        "              \"watchers_count\": repo.get(\"watchers_count\", 0),\n",
        "              \"language\": repo.get(\"language\", \"\"),\n",
        "              \"has_projects\": repo.get(\"has_projects\", False),\n",
        "              \"has_wiki\": repo.get(\"has_wiki\", False),\n",
        "              \"license_name\": license_name\n",
        "          })\n",
        "    return repo_data\n",
        "rep=get_user_repositories(logins)\n",
        "#to view the repository details\n",
        "rep[:2]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "2I3kt2xqOwWA",
        "outputId": "67aef3d0-51e0-4c2c-cb6b-1344654c5174"
      },
      "execution_count": 71,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[{'login': 'getify',\n",
              "  'full_name': 'getify/A-Tale-Of-Three-Lists',\n",
              "  'created_at': '2015-10-13T03:10:43Z',\n",
              "  'stargazers_count': 651,\n",
              "  'watchers_count': 651,\n",
              "  'language': 'JavaScript',\n",
              "  'has_projects': True,\n",
              "  'has_wiki': True,\n",
              "  'license_name': ''},\n",
              " {'login': 'getify',\n",
              "  'full_name': 'getify/asyncGate.js',\n",
              "  'created_at': '2011-10-21T13:42:28Z',\n",
              "  'stargazers_count': 21,\n",
              "  'watchers_count': 21,\n",
              "  'language': 'JavaScript',\n",
              "  'has_projects': True,\n",
              "  'has_wiki': False,\n",
              "  'license_name': ''}]"
            ]
          },
          "metadata": {},
          "execution_count": 71
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "users_df = pd.DataFrame(formatted_users)\n",
        "repos_df = pd.DataFrame(rep)"
      ],
      "metadata": {
        "id": "Hl9bLl9qV-Fo"
      },
      "execution_count": 63,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "users_df.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 556
        },
        "id": "6dY3xv0fi4yI",
        "outputId": "876f7ec8-0478-4da2-99c4-3da7f9367506"
      },
      "execution_count": 64,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "          login           name                       company  \\\n",
              "0        getify   Kyle Simpson              GETIFY SOLUTIONS   \n",
              "1       benawad       Ben Awad                       VOIDPET   \n",
              "2  steveklabnik  Steve Klabnik                 OXIDECOMPUTER   \n",
              "3    cloudflare     Cloudflare                                 \n",
              "4       jbogard   Jimmy Bogard  JIMMY BOGARD CONSULTING, LLC   \n",
              "\n",
              "                                           location                   email  \\\n",
              "0                                        Austin, TX        getify@gmail.com   \n",
              "1                                        Austin, TX                    None   \n",
              "2                                        Austin, TX  steve@steveklabnik.com   \n",
              "3  San Francisco, London, Austin, Lisbon, Singapore                    None   \n",
              "4                                        Austin, TX  jimmy.bogard@gmail.com   \n",
              "\n",
              "  hireable                                                bio  public_repos  \\\n",
              "0     True  Kyle Simpson is a Human-Centric Technologist. ...            69   \n",
              "1     None          React.js, Typescript, Node.js, PostgreSQL           254   \n",
              "2     None  All i'm trying to do is enjoy every day to the...           832   \n",
              "3     None                                               None           475   \n",
              "4     None         The Barley Architect, Architect Consultant           139   \n",
              "\n",
              "   followers  following            created_at  \n",
              "0      43932          2  2009-11-08T06:56:21Z  \n",
              "1      29015          4  2014-06-12T15:55:20Z  \n",
              "2       6803        206  2008-10-06T17:40:28Z  \n",
              "3       6433          0  2010-06-25T01:24:59Z  \n",
              "4       5945          3  2009-07-13T18:05:22Z  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-3dc88e3d-9de2-4457-a3cb-9495954f566a\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>login</th>\n",
              "      <th>name</th>\n",
              "      <th>company</th>\n",
              "      <th>location</th>\n",
              "      <th>email</th>\n",
              "      <th>hireable</th>\n",
              "      <th>bio</th>\n",
              "      <th>public_repos</th>\n",
              "      <th>followers</th>\n",
              "      <th>following</th>\n",
              "      <th>created_at</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>getify</td>\n",
              "      <td>Kyle Simpson</td>\n",
              "      <td>GETIFY SOLUTIONS</td>\n",
              "      <td>Austin, TX</td>\n",
              "      <td>getify@gmail.com</td>\n",
              "      <td>True</td>\n",
              "      <td>Kyle Simpson is a Human-Centric Technologist. ...</td>\n",
              "      <td>69</td>\n",
              "      <td>43932</td>\n",
              "      <td>2</td>\n",
              "      <td>2009-11-08T06:56:21Z</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>benawad</td>\n",
              "      <td>Ben Awad</td>\n",
              "      <td>VOIDPET</td>\n",
              "      <td>Austin, TX</td>\n",
              "      <td>None</td>\n",
              "      <td>None</td>\n",
              "      <td>React.js, Typescript, Node.js, PostgreSQL</td>\n",
              "      <td>254</td>\n",
              "      <td>29015</td>\n",
              "      <td>4</td>\n",
              "      <td>2014-06-12T15:55:20Z</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>steveklabnik</td>\n",
              "      <td>Steve Klabnik</td>\n",
              "      <td>OXIDECOMPUTER</td>\n",
              "      <td>Austin, TX</td>\n",
              "      <td>steve@steveklabnik.com</td>\n",
              "      <td>None</td>\n",
              "      <td>All i'm trying to do is enjoy every day to the...</td>\n",
              "      <td>832</td>\n",
              "      <td>6803</td>\n",
              "      <td>206</td>\n",
              "      <td>2008-10-06T17:40:28Z</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>cloudflare</td>\n",
              "      <td>Cloudflare</td>\n",
              "      <td></td>\n",
              "      <td>San Francisco, London, Austin, Lisbon, Singapore</td>\n",
              "      <td>None</td>\n",
              "      <td>None</td>\n",
              "      <td>None</td>\n",
              "      <td>475</td>\n",
              "      <td>6433</td>\n",
              "      <td>0</td>\n",
              "      <td>2010-06-25T01:24:59Z</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>jbogard</td>\n",
              "      <td>Jimmy Bogard</td>\n",
              "      <td>JIMMY BOGARD CONSULTING, LLC</td>\n",
              "      <td>Austin, TX</td>\n",
              "      <td>jimmy.bogard@gmail.com</td>\n",
              "      <td>None</td>\n",
              "      <td>The Barley Architect, Architect Consultant</td>\n",
              "      <td>139</td>\n",
              "      <td>5945</td>\n",
              "      <td>3</td>\n",
              "      <td>2009-07-13T18:05:22Z</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3dc88e3d-9de2-4457-a3cb-9495954f566a')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-3dc88e3d-9de2-4457-a3cb-9495954f566a button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-3dc88e3d-9de2-4457-a3cb-9495954f566a');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-39f33c15-641f-4c9d-9f84-a5a8e2e01d4f\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-39f33c15-641f-4c9d-9f84-a5a8e2e01d4f')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-39f33c15-641f-4c9d-9f84-a5a8e2e01d4f button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "users_df",
              "summary": "{\n  \"name\": \"users_df\",\n  \"rows\": 30,\n  \"fields\": [\n    {\n      \"column\": \"login\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 30,\n        \"samples\": [\n          \"pry0cc\",\n          \"SlexAxton\",\n          \"codinghemp\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 30,\n        \"samples\": [\n          \"pry0cc\",\n          \"Alex Sexton\",\n          \"William Smith\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"company\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 23,\n        \"samples\": [\n          \"DISCORD\",\n          \"SCHNEEMS\",\n          \"GETIFY SOLUTIONS\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"location\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 8,\n        \"samples\": [\n          \"San Francisco, London, Austin, Lisbon, Singapore\",\n          \"Austin, Texas\",\n          \"Austin, TX\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"email\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 16,\n        \"samples\": [\n          \"getify@gmail.com\",\n          \"steve@steveklabnik.com\",\n          \"opensource_ww_grp@oracle.com\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"hireable\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          true\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"bio\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 21,\n        \"samples\": [\n          \"Kyle Simpson is a Human-Centric Technologist. He's fighting for the people behind the pixels.\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"public_repos\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 177,\n        \"min\": 6,\n        \"max\": 832,\n        \"num_unique_values\": 29,\n        \"samples\": [\n          33\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"followers\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8923,\n        \"min\": 1201,\n        \"max\": 43932,\n        \"num_unique_values\": 30,\n        \"samples\": [\n          1370\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"following\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1059,\n        \"min\": 0,\n        \"max\": 5836,\n        \"num_unique_values\": 22,\n        \"samples\": [\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"created_at\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 30,\n        \"samples\": [\n          \"2013-05-03T19:58:45Z\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 64
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "repos_df.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "ecfswBvajDVz",
        "outputId": "2799f96c-1fbc-426e-ab48-5eb739242475"
      },
      "execution_count": 65,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    login                      full_name            created_at  \\\n",
              "0  getify   getify/A-Tale-Of-Three-Lists  2015-10-13T03:10:43Z   \n",
              "1  getify            getify/asyncGate.js  2011-10-21T13:42:28Z   \n",
              "2  getify              getify/asynquence  2012-02-06T16:45:29Z   \n",
              "3  getify             getify/BikechainJS  2010-02-18T03:26:20Z   \n",
              "4  getify  getify/breakthewebforward.com  2015-05-26T04:50:05Z   \n",
              "\n",
              "   stargazers_count  watchers_count    language  has_projects  has_wiki  \\\n",
              "0               651             651  JavaScript          True      True   \n",
              "1                21              21  JavaScript          True     False   \n",
              "2              1743            1743  JavaScript          True     False   \n",
              "3                82              82         C++          True      True   \n",
              "4                 1               1  JavaScript          True      True   \n",
              "\n",
              "  license_name  \n",
              "0               \n",
              "1               \n",
              "2               \n",
              "3               \n",
              "4               "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-3b0f6099-25e1-49c0-b5b4-4fe2cd7c9a55\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>login</th>\n",
              "      <th>full_name</th>\n",
              "      <th>created_at</th>\n",
              "      <th>stargazers_count</th>\n",
              "      <th>watchers_count</th>\n",
              "      <th>language</th>\n",
              "      <th>has_projects</th>\n",
              "      <th>has_wiki</th>\n",
              "      <th>license_name</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>getify</td>\n",
              "      <td>getify/A-Tale-Of-Three-Lists</td>\n",
              "      <td>2015-10-13T03:10:43Z</td>\n",
              "      <td>651</td>\n",
              "      <td>651</td>\n",
              "      <td>JavaScript</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td></td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>getify</td>\n",
              "      <td>getify/asyncGate.js</td>\n",
              "      <td>2011-10-21T13:42:28Z</td>\n",
              "      <td>21</td>\n",
              "      <td>21</td>\n",
              "      <td>JavaScript</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td></td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>getify</td>\n",
              "      <td>getify/asynquence</td>\n",
              "      <td>2012-02-06T16:45:29Z</td>\n",
              "      <td>1743</td>\n",
              "      <td>1743</td>\n",
              "      <td>JavaScript</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td></td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>getify</td>\n",
              "      <td>getify/BikechainJS</td>\n",
              "      <td>2010-02-18T03:26:20Z</td>\n",
              "      <td>82</td>\n",
              "      <td>82</td>\n",
              "      <td>C++</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td></td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>getify</td>\n",
              "      <td>getify/breakthewebforward.com</td>\n",
              "      <td>2015-05-26T04:50:05Z</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>JavaScript</td>\n",
              "      <td>True</td>\n",
              "      <td>True</td>\n",
              "      <td></td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3b0f6099-25e1-49c0-b5b4-4fe2cd7c9a55')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-3b0f6099-25e1-49c0-b5b4-4fe2cd7c9a55 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-3b0f6099-25e1-49c0-b5b4-4fe2cd7c9a55');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-bdc37eed-a1da-450e-87d3-caf58f283a75\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-bdc37eed-a1da-450e-87d3-caf58f283a75')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-bdc37eed-a1da-450e-87d3-caf58f283a75 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "repos_df",
              "summary": "{\n  \"name\": \"repos_df\",\n  \"rows\": 2288,\n  \"fields\": [\n    {\n      \"column\": \"login\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 30,\n        \"samples\": [\n          \"pry0cc\",\n          \"SlexAxton\",\n          \"codinghemp\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"full_name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 2288,\n        \"samples\": [\n          \"mikermcneil/devopsdays\",\n          \"ContinuumIO/hashdist\",\n          \"GeostatsGuy/Resources\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"created_at\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 2288,\n        \"samples\": [\n          \"2014-05-05T14:18:59Z\",\n          \"2017-09-27T14:12:27Z\",\n          \"2018-11-11T17:12:33Z\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"stargazers_count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3827,\n        \"min\": 0,\n        \"max\": 179585,\n        \"num_unique_values\": 244,\n        \"samples\": [\n          16642,\n          94,\n          338\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"watchers_count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3827,\n        \"min\": 0,\n        \"max\": 179585,\n        \"num_unique_values\": 244,\n        \"samples\": [\n          16642,\n          94,\n          338\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"language\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 55,\n        \"samples\": [\n          \"Erlang\",\n          \"Python\",\n          \"CoffeeScript\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"has_projects\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          false,\n          true\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"has_wiki\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          false,\n          true\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"license_name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 21,\n        \"samples\": [\n          \"\",\n          \"epl-1.0\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 65
        }
      ]
    },
    {
      "source": [
        "#user data visualization\n",
        "from matplotlib import pyplot as plt\n",
        "import seaborn as sns\n",
        "\n",
        "# Create subplots\n",
        "fig, axs = plt.subplots(1, 3, figsize=(18, 6))  # Adjust size as needed\n",
        "\n",
        "# 1. Histogram of followers\n",
        "axs[0].hist(users_df['followers'], bins=20, color='skyblue', edgecolor='black')\n",
        "axs[0].set_title('Distribution of Followers')\n",
        "axs[0].set_xlabel('Number of Followers')\n",
        "axs[0].set_ylabel('Frequency')\n",
        "axs[0].spines[['top', 'right']].set_visible(False)\n",
        "\n",
        "# 2. Horizontal bar chart of hireable status\n",
        "users_df.groupby('hireable').size().plot(kind='barh', color=sns.color_palette('Dark2'), ax=axs[1])\n",
        "axs[1].set_title('Number of Hireable Users')\n",
        "axs[1].set_xlabel('Count')\n",
        "axs[1].spines[['top', 'right']].set_visible(False)\n",
        "\n",
        "# 3. Histogram of public repositories\n",
        "axs[2].hist(users_df['public_repos'], bins=20, color='salmon', edgecolor='black')\n",
        "axs[2].set_title('Distribution of Public Repositories')\n",
        "axs[2].set_xlabel('Number of Public Repositories')\n",
        "axs[2].set_ylabel('Frequency')\n",
        "axs[2].spines[['top', 'right']].set_visible(False)\n",
        "\n",
        "plt.tight_layout()\n",
        "plt.show()\n"
      ],
      "cell_type": "code",
      "metadata": {
        "id": "cUuZFiYfXOh9",
        "outputId": "afafdb17-ecc4-415e-b9c6-4cc2cfcced24",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 398
        }
      },
      "execution_count": 68,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1800x600 with 3 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from matplotlib import pyplot as plt\n",
        "import seaborn as sns\n",
        "\n",
        "fig, axs = plt.subplots(1, 2, figsize=(18, 6))\n",
        "\n",
        "# 1. Scatterplot of stargazers count vs watchers count\n",
        "stargazers = repos_df['stargazers_count']\n",
        "watchers = repos_df['watchers_count']\n",
        "axs[0].scatter(stargazers, watchers, alpha=0.5, color='purple')\n",
        "axs[0].set_title('Stargazers vs Watchers')\n",
        "axs[0].set_xlabel('Number of Stargazers')\n",
        "axs[0].set_ylabel('Number of Watchers')\n",
        "axs[0].set_xscale('log')\n",
        "axs[0].set_yscale('log')\n",
        "axs[0].grid()\n",
        "\n",
        "# 2. Pie chart for programming languages\n",
        "language_counts = repos_df['language'].value_counts()\n",
        "\n",
        "axs[1].pie(language_counts, labels=language_counts.index, autopct='%1.1f%%', startangle=140, colors=sns.color_palette(\"Set2\"))\n",
        "axs[1].set_title('Distribution of Programming Languages in Repositories')\n",
        "axs[1].axis('equal')\n",
        "\n",
        "\n",
        "plt.tight_layout()\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 398
        },
        "id": "P0sr9eoMklu7",
        "outputId": "567d5f80-eb5f-4a48-9758-ebb93cbef3f6"
      },
      "execution_count": 82,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1800x600 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#converting dataframe to csv and then saving\n",
        "users_df.to_csv(\"users.csv\", index=False)\n",
        "repos_df.to_csv(\"repositories.csv\", index=False)"
      ],
      "metadata": {
        "id": "of3Ad2onWtUK"
      },
      "execution_count": 69,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from google.colab import files\n",
        "\n",
        "files.download(\"users.csv\")\n",
        "files.download(\"repositories.csv\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 17
        },
        "id": "x8J1vinpPJeG",
        "outputId": "bf0af16d-7633-4d14-8e3f-40937993811a"
      },
      "execution_count": 70,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.Javascript object>"
            ],
            "application/javascript": [
              "\n",
              "    async function download(id, filename, size) {\n",
              "      if (!google.colab.kernel.accessAllowed) {\n",
              "        return;\n",
              "      }\n",
              "      const div = document.createElement('div');\n",
              "      const label = document.createElement('label');\n",
              "      label.textContent = `Downloading \"${filename}\": `;\n",
              "      div.appendChild(label);\n",
              "      const progress = document.createElement('progress');\n",
              "      progress.max = size;\n",
              "      div.appendChild(progress);\n",
              "      document.body.appendChild(div);\n",
              "\n",
              "      const buffers = [];\n",
              "      let downloaded = 0;\n",
              "\n",
              "      const channel = await google.colab.kernel.comms.open(id);\n",
              "      // Send a message to notify the kernel that we're ready.\n",
              "      channel.send({})\n",
              "\n",
              "      for await (const message of channel.messages) {\n",
              "        // Send a message to notify the kernel that we're ready.\n",
              "        channel.send({})\n",
              "        if (message.buffers) {\n",
              "          for (const buffer of message.buffers) {\n",
              "            buffers.push(buffer);\n",
              "            downloaded += buffer.byteLength;\n",
              "            progress.value = downloaded;\n",
              "          }\n",
              "        }\n",
              "      }\n",
              "      const blob = new Blob(buffers, {type: 'application/binary'});\n",
              "      const a = document.createElement('a');\n",
              "      a.href = window.URL.createObjectURL(blob);\n",
              "      a.download = filename;\n",
              "      div.appendChild(a);\n",
              "      a.click();\n",
              "      div.remove();\n",
              "    }\n",
              "  "
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.Javascript object>"
            ],
            "application/javascript": [
              "download(\"download_9c313ba2-8636-449f-bdcd-5e3ca26da0ca\", \"users.csv\", 4573)"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.Javascript object>"
            ],
            "application/javascript": [
              "\n",
              "    async function download(id, filename, size) {\n",
              "      if (!google.colab.kernel.accessAllowed) {\n",
              "        return;\n",
              "      }\n",
              "      const div = document.createElement('div');\n",
              "      const label = document.createElement('label');\n",
              "      label.textContent = `Downloading \"${filename}\": `;\n",
              "      div.appendChild(label);\n",
              "      const progress = document.createElement('progress');\n",
              "      progress.max = size;\n",
              "      div.appendChild(progress);\n",
              "      document.body.appendChild(div);\n",
              "\n",
              "      const buffers = [];\n",
              "      let downloaded = 0;\n",
              "\n",
              "      const channel = await google.colab.kernel.comms.open(id);\n",
              "      // Send a message to notify the kernel that we're ready.\n",
              "      channel.send({})\n",
              "\n",
              "      for await (const message of channel.messages) {\n",
              "        // Send a message to notify the kernel that we're ready.\n",
              "        channel.send({})\n",
              "        if (message.buffers) {\n",
              "          for (const buffer of message.buffers) {\n",
              "            buffers.push(buffer);\n",
              "            downloaded += buffer.byteLength;\n",
              "            progress.value = downloaded;\n",
              "          }\n",
              "        }\n",
              "      }\n",
              "      const blob = new Blob(buffers, {type: 'application/binary'});\n",
              "      const a = document.createElement('a');\n",
              "      a.href = window.URL.createObjectURL(blob);\n",
              "      a.download = filename;\n",
              "      div.appendChild(a);\n",
              "      a.click();\n",
              "      div.remove();\n",
              "    }\n",
              "  "
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.Javascript object>"
            ],
            "application/javascript": [
              "download(\"download_d8c778d9-707a-4f1c-ab36-e09f311ce59a\", \"repositories.csv\", 186182)"
            ]
          },
          "metadata": {}
        }
      ]
    }
  ]
}